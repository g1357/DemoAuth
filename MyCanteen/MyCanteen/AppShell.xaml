<?xml version="1.0" encoding="UTF-8"?>
<Shell xmlns="http://xamarin.com/schemas/2014/forms" 
       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
       xmlns:views="clr-namespace:MyCanteen.Views"
       xmlns:helpers="clr-namespace:MyCanteen.Helpers"
       Title="MyCanteen"
       x:Class="MyCanteen.AppShell" >
    <!--
    FlyoutIcon="{helpers:FlyoutIconResource Images.burger.png}">
    -->
    <!--
        The overall app visual hierarchy is defined here, along with navigation.
    
        https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/
    -->

    <Shell.Resources>
        <ResourceDictionary>
            <Style x:Key="BaseStyle" TargetType="Element">
                <Setter Property="Shell.BackgroundColor" Value="{StaticResource Primary}" />
                <Setter Property="Shell.ForegroundColor" Value="White" />
                <Setter Property="Shell.TitleColor" Value="White" />
                <Setter Property="Shell.DisabledColor" Value="#B4FFFFFF" />
                <Setter Property="Shell.UnselectedColor" Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarBackgroundColor" Value="{StaticResource Primary}" />
                <Setter Property="Shell.TabBarForegroundColor" Value="White"/>
                <Setter Property="Shell.TabBarUnselectedColor" Value="#95FFFFFF"/>
                <Setter Property="Shell.TabBarTitleColor" Value="White"/>
            </Style>
            <Style TargetType="TabBar" BasedOn="{StaticResource BaseStyle}" />
            <Style TargetType="FlyoutItem" BasedOn="{StaticResource BaseStyle}" />

            <!--
            Default Styles for all Flyout Items
            https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyoutitem-and-menuitem-style-classes
            -->
            <Style Class="FlyoutItemLabelStyle" TargetType="Label">
                <Setter Property="TextColor" Value="White"></Setter>
            </Style>
            <Style Class="FlyoutItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="BackgroundColor" Value="LightBlue"></Setter>
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="White" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <!--
            Custom Style you can apply to any Flyout Item
            -->
            <Style Class="MenuItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Shell.Resources>

    <!-- 
        When the Flyout is visible this defines the content to display in the flyout.
        FlyoutDisplayOptions="AsMultipleItems" will create a separate flyout item for each child element    
        https://docs.microsoft.com/dotnet/api/xamarin.forms.shellgroupitem.flyoutdisplayoptions?view=xamarin-forms
    <FlyoutItem FlyoutDisplayOptions="AsMultipleItems">
        <ShellContent Title="About" Icon="tab_about.png" Route="AboutPage" ContentTemplate="{DataTemplate local:AboutPage}" />
        <ShellContent Title="Browse" Icon="tab_feed.png" ContentTemplate="{DataTemplate local:ItemsPage}" />
    </FlyoutItem>
    -->
    <FlyoutItem Title="Выбор режима" Icon="choices.png">
        <ShellContent Title="Выбор режима" Icon="choices.png" Route="SelectMode"
                      ContentTemplate="{DataTemplate views:SelectModePage}" />
    </FlyoutItem>

    <FlyoutItem Title="Текущее меню" Icon="choices.png">
        <ShellContent Title="Текущее меню" Icon="tab_feed.png" Route="CurrentMenu"
                      ContentTemplate="{DataTemplate views:CurrenMenuPage}" />
    </FlyoutItem>
    <FlyoutItem Title="Мои заказы" Icon="shopping_bag.png">
        <ShellContent Title="Мои заказы" Icon="tab_feed.png" ContentTemplate="{DataTemplate views:MyOrdersPage}" />
    </FlyoutItem>
    <FlyoutItem Title="Полное меню" Icon="menu.png">
        <ShellContent Title="Полное меню" Icon="tab_feed.png" ContentTemplate="{DataTemplate views:FullMenuPage}" />
    </FlyoutItem>
    <FlyoutItem Title="История заказов" Icon="clock.png">
        <ShellContent Title="История заказов" Icon="tab_feed.png" ContentTemplate="{DataTemplate views:OrderHistoryPage}" />
    </FlyoutItem>
    <FlyoutItem Title="Отзывы" Icon="feedback.png">
        <ShellContent Title="Все отзывы" Icon="tab_feed.png" ContentTemplate="{DataTemplate views:AllFeedbacksPage}" />
        <ShellContent Title="Мои отзывы" Icon="tab_feed.png" ContentTemplate="{DataTemplate views:MyFeedbacksPage}" />
        <ShellContent Title="Написать отзыв" Icon="tab_feed.png" ContentTemplate="{DataTemplate views:WriteFeedbackPage}" />
    </FlyoutItem>
    <FlyoutItem Title="Настройки" Icon="setting_lines.png">
        <ShellContent Title="текущее меню" Icon="tab_feed.png" ContentTemplate="{DataTemplate views:SettingsPage}" />
    </FlyoutItem>
    <FlyoutItem Title="О приложении" Icon="tab_about.png">
        <ShellContent Title="О приложении" Icon="tab_about.png" ContentTemplate="{DataTemplate views:AboutPage}" />
        <ShellContent Title="Новости" Icon="tab_feed.png" ContentTemplate="{DataTemplate views:NewsPage}" />
    </FlyoutItem>
    <!-- When the Flyout is visible this will be a menu item you can tie a click behavior to  -->
    <!--<MenuItem Text="Logout" StyleClass="MenuItemLayoutStyle" Clicked="OnMenuItemClicked">
    </MenuItem>-->
    <MenuItem Text="Login" IconImageSource="feedback.png" Command="{Binding LoginCommand}" />
    <MenuItem Text="Register" IconImageSource="feedback.png" Command="{Binding RegisterCommand}" />

    <!--
        This defines content that won't show up in a flyout menu. When this content is active the flyout menu won't be available.
        This is useful for creating areas of the application where you don't want users to be able to navigate away from.
        If you would like to navigate to this content you can do so by calling
        await Shell.Current.GoToAsync("//LoginPage");
    -->
    <ShellContent Route="LoginPage" Shell.FlyoutBehavior="Disabled" ContentTemplate="{DataTemplate views:LoginPage}" />
    <ShellContent Route="RegisterPage" Shell.FlyoutBehavior="Disabled" ContentTemplate="{DataTemplate views:RegisterPage}" />
    <ShellContent Route="RegConfirmationPage" Shell.FlyoutBehavior="Disabled" ContentTemplate="{DataTemplate views:RegConfirmationPage}" />
    <ShellContent Route="AllUsers" Shell.FlyoutBehavior="Disabled" ContentTemplate="{DataTemplate views:AllUsersPage}" />

    <!-- Optional Templates 
    // These may be provided inline as below or as separate classes.

    // This header appears at the top of the Flyout.
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyout-header
    -->
    <Shell.FlyoutHeaderTemplate>
        <DataTemplate>
            <Grid>
                <Image Source="{helpers:ImageResource Images.canteen01.jpeg}" />
            </Grid>
        </DataTemplate>
    </Shell.FlyoutHeaderTemplate>
    <!--
    // ItemTemplate is for ShellItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-flyoutitem-appearance
    <Shell.ItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Title, Icon
            </ContentView>
        </DataTemplate>
    </Shell.ItemTemplate>

    // MenuItemTemplate is for MenuItems as displayed in a Flyout
    // https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#define-menuitem-appearance
    <Shell.MenuItemTemplate>
        <DataTemplate>
            <ContentView>
                Bindable Properties: Text, Icon
            </ContentView>
        </DataTemplate>
    </Shell.MenuItemTemplate>

    -->

</Shell>
